server:
    port: 8081

spring:
    datasource:
        url: ${DATABASE_URL}
        username: ${DATABASE_USERNAME}
        password: ${DATABASE_PASSWORD}
        driver-class-name: org.postgresql.Driver
        hikari:
            initialization-fail-timeout: 3600
    jpa:
        hibernate:
            ddl-auto: validate
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        generate-ddl: false
        open-in-view: false
        properties:
            hibernate:
                default_batch_fetch_size: 1000
                show_sql: false
                format_sql: true
    flyway:
        enabled: true
    data:
        redis:
            host: ${REDIS_HOST}
            port: ${REDIS_PORT}
            password: ${REDIS_PASSWORD:}
            repositories:
                enabled: false

app:
    season: 5
    cookie:
        domain: .uoslife.net
        secure: true

portone:
    api:
        url: https://api.iamport.kr
        price:
            single: 2000
            triple: 6000
        imp:
            key: ${PORTONE_API_IMP_KEY}
            secret: ${PORTONE_API_IMP_SECRET}

springdoc:
    swagger-ui:
        path: /swagger-ui/swagger-ui.html
        operationsSorter: method
        disable-swagger-default-url: true
        display-request-duration: true
    api-docs:
        path: /swagger-ui/api-docs
    show-actuator: true
    default-consumes-media-type: application/json
    default-produces-media-type: application/json

management:
    endpoints:
        enabled-by-default: false
        web:
            exposure:
                include: health, info
            base-path: /meeting/actuator
    endpoint:
        health:
            probes:
                enabled: true
            enabled: true
            show-details: always
        info:
            enabled: true
    health:
        diskspace:
            enabled: false

logging:
    level:
        org:
            springframework:
                web:
                    filter: INFO

jwt:
    access:
        secret: ${JWT_ACCESS_SECRET}
        expiration: 3600000 # 1시간
    refresh:
        secret: ${JWT_REFRESH_SECRET}
        expiration: 604800000 # 7일

aws:
    access-key-id: ${AWS_SES_ACCESS_KEY}
    secret-access-key: ${AWS_SES_SECRET_KEY}
    region: ap-northeast-2
    ses:
        email:
            title: UOSLIFE 인증 메일입니다.
            from: 시대생팀 <no-reply@uoslife.team>
            reply-to: 시대생팀 <support@uoslife.team>

auth:
    email:
        verification-code-expiry: 600  # 인증코드 유효시간 (초)
        daily-send-limit: 50  # 하루 최대 발송 횟수
        code-verify-limit: 50 # 일일 최대 인증 횟수
