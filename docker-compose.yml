version: '3'

services:
    application:
        image: seogwoojin1/meeting-server:0.1
        ports:
            - "8081:8081"
        environment:
            SPRING_DATASOURCE_URL: ${DATABASE_URL}
            SPRING_DATASOURCE_USERNAME: ${DATABASE_USERNAME}
            SPRING_DATASOURCE_PASSWORD: ${DATABASE_PASSWORD}

            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
            REDIS_PASSWORD: ${REDIS_PASSWORD}

            JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
            JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
            JWT_ENCRYPTION_AES_SECRET: ${JWT_ENCRYPTION_AES_SECRET}

            AWS_SES_ACCESS_KEY: ${AWS_SES_ACCESS_KEY}
            AWS_SES_SECRET_KEY: ${AWS_SES_SECRET_KEY}

            COOKIE_DOMAIN: ${COOKIE_DOMAIN}
            COOKIE_SECURE: ${COOKIE_SECURE}

            PORTONE_API_IMP_KEY: ${PORTONE_API_IMP_KEY}
            PORTONE_API_IMP_SECRET: ${PORTONE_API_IMP_SECRET}

            ADMIN_API_KEY: ${ADMIN_API_KEY}

        logging:
            driver: awslogs
            options:
                awslogs-region: "ap-northeast-2"
                awslogs-group: "meeting-server-group"
                awslogs-multiline-pattern: "^(INFO|ERROR)"
                awslogs-stream: "ec2-log-catcher"

#    postgres:
#        image: postgres
#        restart: always
#        ports:
#            - "5432:5432"
#        container_name: postgres
#        environment:
#            POSTGRES_USER: server-meeting
#            POSTGRES_PASSWORD: server-meeting
#            POSTGRES_DB: server-meeting

#    redis:
#        image: redis
#        restart: always
#        command: redis-server --port 6379
#        hostname: redis
#        ports:
#            - "6379:6379"
